/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.Distributor;

import business.Business;
import business.Inventory.Inventory;
import business.Organization.DistributorOrganization;
import business.Organization.Organization;
import business.Organization.ProviderOrganization;
import business.UserAccount.UserAccount;
import business.WorkQueue.DistributorBillingRequest;
import business.WorkQueue.ProviderWorkRequest;
import business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author mac
 */
public class DistributorVaccineRequestWorkArea extends javax.swing.JPanel {

    /**
     * Creates new form DistributorVaccineRequestWorkArea
     */
    private JPanel userProcessContainer;
    private Business business;
    private UserAccount account;
    private DistributorOrganization distributorOrganization;

    public DistributorVaccineRequestWorkArea(JPanel userProcessContainer, Business business, UserAccount account, DistributorOrganization distributorOrganization) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.business = business;
        this.account = account;
        this.distributorOrganization = distributorOrganization;

        populateVaccineRequestTable();
        populateAssignedVaccineRequestTable();

    }

    private void populateVaccineRequestTable() {
        DefaultTableModel model = (DefaultTableModel) tblVaccineRequest.getModel();
        model.setRowCount(0);
        for (WorkRequest work : business.getWorkQueue().getWorkRequestList()) {
            if (work instanceof ProviderWorkRequest && work.getStatus().equals("Forwarded to Distributor")) {
                Object[] row = new Object[5];
                row[0] = work.getVaccine().getVaccineId();
                row[1] = work.getVaccine();
                row[2] = ((ProviderWorkRequest) work).getRequestedQty();
                row[3] = work.getSender();
                row[4] = work;
                model.addRow(row);
            }
        }
    }

    private void populateAssignedVaccineRequestTable() {
        DefaultTableModel model = (DefaultTableModel) tblAssignedVaccineRequest.getModel();
        model.setRowCount(0);
        for (WorkRequest work : business.getWorkQueue().getWorkRequestList()) {
            if (work instanceof ProviderWorkRequest && work.getReceiver() == account) {
                Object[] row = new Object[5];
                row[0] = work.getVaccine().getVaccineId();
                row[1] = work.getVaccine();
                row[2] = ((ProviderWorkRequest) work).getRequestedQty();
                row[3] = work.getSender();
                row[4] = work;
                model.addRow(row);
            }
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblVaccineRequest = new javax.swing.JTable();
        btnAssign = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        btnAccept = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblAssignedVaccineRequest = new javax.swing.JTable();

        setPreferredSize(new java.awt.Dimension(1024, 768));

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 1, 24)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Distributor Center Work Area");

        btnBack.setFont(new java.awt.Font("Helvetica Neue", 1, 15)); // NOI18N
        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        tblVaccineRequest.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        tblVaccineRequest.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Vaccine ID", "Vaccine Name", "Qty", "Sender", "Status"
            }
        ));
        jScrollPane2.setViewportView(tblVaccineRequest);
        if (tblVaccineRequest.getColumnModel().getColumnCount() > 0) {
            tblVaccineRequest.getColumnModel().getColumn(0).setPreferredWidth(12);
            tblVaccineRequest.getColumnModel().getColumn(2).setPreferredWidth(8);
            tblVaccineRequest.getColumnModel().getColumn(3).setPreferredWidth(9);
        }

        btnAssign.setBackground(new java.awt.Color(255, 255, 204));
        btnAssign.setText("Assign to Target Provider");
        btnAssign.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAssignActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Helvetica Neue", 0, 15)); // NOI18N
        jLabel3.setText("Request From Provider");

        btnAccept.setText("Assign to me");
        btnAccept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAcceptActionPerformed(evt);
            }
        });

        tblAssignedVaccineRequest.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        tblAssignedVaccineRequest.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Vaccine ID", "Vaccine Name", "Qty", "Sender", "Status"
            }
        ));
        jScrollPane3.setViewportView(tblAssignedVaccineRequest);
        if (tblAssignedVaccineRequest.getColumnModel().getColumnCount() > 0) {
            tblAssignedVaccineRequest.getColumnModel().getColumn(0).setPreferredWidth(12);
            tblAssignedVaccineRequest.getColumnModel().getColumn(2).setPreferredWidth(8);
            tblAssignedVaccineRequest.getColumnModel().getColumn(3).setPreferredWidth(9);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnBack)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(167, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(btnAccept)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 703, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 703, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAssign))
                .addGap(154, 154, 154))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBack))
                .addGap(67, 67, 67)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnAccept)
                .addGap(29, 29, 29)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnAssign)
                .addContainerGap(153, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAssignActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAssignActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblAssignedVaccineRequest.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select the row for distrition", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {
            ProviderWorkRequest pwr = (ProviderWorkRequest) tblAssignedVaccineRequest.getValueAt(selectedRow, 4);
            if (!pwr.getStatus().equals("Processing")) {
                JOptionPane.showMessageDialog(null, "Failed. This request has already been processed", "Warning", JOptionPane.WARNING_MESSAGE);
                return;
            }
            pwr.setStatus("Vaccine Distributed");
            pwr.setReceiver(account);
            populateAssignedVaccineRequestTable();
            //update provider inventory   
            Organization senderorganization = business.findOrganizationForUserAccount(pwr.getSender());
            Inventory providerInventory = ((ProviderOrganization) senderorganization).getVaccineInventory(); // get provider inventory
            providerInventory.increaseVaccineStock(pwr.getVaccine(), pwr.getRequestedQty());
            pwr.setResolveDate(new Date());
            //generate billing work request
            DistributorBillingRequest billingRequest = new DistributorBillingRequest();
            billingRequest.setVaccine(pwr.getVaccine());
            billingRequest.setTotalPrice(pwr.getRequestedQty() * pwr.getVaccine().getPrice());
            billingRequest.setStatus("Pending payment");
            billingRequest.setSender(account);
            billingRequest.setReceiver(pwr.getSender());
            distributorOrganization.getWorkQueue().getWorkRequestList().add(billingRequest);
            account.getWorkQueue().getWorkRequestList().add(billingRequest);
            business.getWorkQueue().getWorkRequestList().add(billingRequest);
            JOptionPane.showMessageDialog(null, "Vaccine Request distributed to provider successfully and bills generated.", "Information", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnAssignActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnAcceptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAcceptActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblVaccineRequest.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select the row to assign the CDC Request", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {
            ProviderWorkRequest p = (ProviderWorkRequest) tblVaccineRequest.getValueAt(selectedRow, 4);
            p.setStatus("Processing");
            p.setReceiver(account);
            populateVaccineRequestTable();
            populateAssignedVaccineRequestTable();
            JOptionPane.showMessageDialog(null, "Request assigned successfully.", "Information", JOptionPane.INFORMATION_MESSAGE);
        }

    }//GEN-LAST:event_btnAcceptActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAccept;
    private javax.swing.JButton btnAssign;
    private javax.swing.JButton btnBack;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable tblAssignedVaccineRequest;
    private javax.swing.JTable tblVaccineRequest;
    // End of variables declaration//GEN-END:variables
}
