package ui.Clinic;

import business.Business;
import business.Organization.ClinicOrganization;
import business.Patient.Patient;
import business.UserAccount.UserAccount;
import business.Vaccine.Vaccine;
import business.VaccineEvents.VaccineEvent;
import business.VaccineEvents.VaccineEventDirectory;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 */
public class VaccineUsageJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private UserAccount account;
    private ClinicOrganization clinicOrganization;
    private Business business;

    public VaccineUsageJPanel(JPanel userProcessContainer, UserAccount account, ClinicOrganization clinicOrganization, Business business) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.account = account;
        this.clinicOrganization = clinicOrganization;
        this.business = business;
        populateBox();
        populateTbl();
        cmbVaccine.setSelectedItem(null);
        cmbPatient.setSelectedItem(null);
    }

    void populateBox() {
        cmbVaccine.removeAllItems();
        for (Vaccine vaccine : clinicOrganization.getVaccineInventory().getVaccineStock().keySet()) {
            cmbVaccine.addItem(vaccine);
        }
        cmbPatient.removeAllItems();
        for (Patient p : clinicOrganization.getClinicPatientDirectory().getPatientList()) {
            cmbPatient.addItem(p.toString());
        }
    }

    void populateTbl() {

        DefaultTableModel dtm_ = (DefaultTableModel) tblVaccineEvents.getModel();
        dtm_.setRowCount(0);
        for (VaccineEvent event : clinicOrganization.getEventDirectory().getEvents()) {
            Object[] row = new Object[5];
            row[0] = event.getEventDate();
            row[1] = event.getPatient();
            row[2] = event.getPatient().getAge();
            row[3] = event.getVaccine();
            row[4] = event;
            dtm_.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        Scroll = new javax.swing.JScrollPane();
        tblVaccineEvents = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        cmbVaccine = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();
        btnUpdateStatus = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        txtVaccineStock = new javax.swing.JTextField();
        cmbPatient = new javax.swing.JComboBox();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(1024, 768));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Clinic Vaccine Usage");

        btnBack.setFont(new java.awt.Font("Helvetica Neue", 1, 15)); // NOI18N
        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        tblVaccineEvents.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Injection Date", "Patient Name", "Patient Age", "Vaccine Name", "Adverse Reaction"
            }
        ));
        Scroll.setViewportView(tblVaccineEvents);
        if (tblVaccineEvents.getColumnModel().getColumnCount() > 0) {
            tblVaccineEvents.getColumnModel().getColumn(0).setPreferredWidth(10);
            tblVaccineEvents.getColumnModel().getColumn(1).setPreferredWidth(9);
            tblVaccineEvents.getColumnModel().getColumn(2).setPreferredWidth(9);
            tblVaccineEvents.getColumnModel().getColumn(4).setPreferredWidth(15);
        }

        jLabel2.setText("Patient Name");

        jLabel4.setText("Vaccine");

        cmbVaccine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbVaccineActionPerformed(evt);
            }
        });

        jButton1.setText("Confirm");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        btnUpdateStatus.setText("Update Adverse Reaction Status");
        btnUpdateStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateStatusActionPerformed(evt);
            }
        });

        jLabel5.setText("Vaccine Stock");

        txtVaccineStock.setEditable(false);
        txtVaccineStock.setForeground(new java.awt.Color(102, 0, 51));
        txtVaccineStock.setCaretColor(new java.awt.Color(0, 204, 204));
        txtVaccineStock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtVaccineStockActionPerformed(evt);
            }
        });

        cmbPatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbPatientActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 903, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnUpdateStatus)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(Scroll, javax.swing.GroupLayout.PREFERRED_SIZE, 771, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(237, 237, 237)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGap(29, 29, 29)
                                    .addComponent(cmbVaccine, 0, 129, Short.MAX_VALUE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel5)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jButton1)
                                        .addComponent(txtVaccineStock, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGap(29, 29, 29)
                                    .addComponent(cmbPatient, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addGap(117, 117, 117))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {cmbVaccine, txtVaccineStock});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel2, jLabel4, jLabel5});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(132, 132, 132)
                .addComponent(Scroll, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnUpdateStatus)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cmbPatient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(cmbVaccine, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtVaccineStock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void cmbVaccineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbVaccineActionPerformed
        // TODO add your handling code here:
        Vaccine selectedVaccine = (Vaccine) cmbVaccine.getSelectedItem();
        int availableQuantity = clinicOrganization.getVaccineInventory().getStockForVaccine(selectedVaccine);
        txtVaccineStock.setText(Integer.toString(availableQuantity));
    }//GEN-LAST:event_cmbVaccineActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:

        Vaccine vaccine = (Vaccine) cmbVaccine.getSelectedItem();
        Patient patient = (Patient) business.getPatientDirectory().findPatientByName(cmbPatient.getSelectedItem().toString());

        int availableQuantity = clinicOrganization.getVaccineInventory().getStockForVaccine(vaccine);

        if (availableQuantity <= 0) {
            JOptionPane.showMessageDialog(
                    null, "No available inventory for the selected vaccine.", "Warning", JOptionPane.WARNING_MESSAGE
            );
            return;
        }

        String confirmMessage = "Please review the information:\n"
                + "Patient Name: " + patient.getName() + "\n"
                + "Patient Age: " + patient.getAge() + "\n"
                + "Selected Vaccine: " + vaccine + "\n\n"
                + "Do you want to proceed with this request?";

        int userChoice = JOptionPane.showConfirmDialog(
                null, confirmMessage, "Confirm Request", JOptionPane.YES_NO_OPTION
        );

        if (userChoice == JOptionPane.YES_OPTION) {
            VaccineEventDirectory vaccineEventDirectory = clinicOrganization.getEventDirectory();
            VaccineEvent ve = vaccineEventDirectory.addEvent(patient, vaccine);
            populateTbl();
            // Update vaccine inventory
            clinicOrganization.getVaccineInventory().decreaseVaccineStock(vaccine, 1);

            JOptionPane.showMessageDialog(
                    null, "Request created successfully.", "Information", JOptionPane.INFORMATION_MESSAGE
            );

            txtVaccineStock.setText("");
            cmbVaccine.setSelectedItem(null);
            cmbPatient.setSelectedItem(null);

        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtVaccineStockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtVaccineStockActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtVaccineStockActionPerformed

    private void btnUpdateStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateStatusActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblVaccineEvents.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select the row to Update Adverse Reaction status", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {
            VaccineEvent ve = (VaccineEvent) tblVaccineEvents.getValueAt(selectedRow, 4);
            if (ve.getAdverseReaction().equals("NO")) {
                ve.setAdverseReaction("YES");
            } else {
                ve.setAdverseReaction("NO");
            }
            populateTbl();
            JOptionPane.showMessageDialog(null, "Adverse Reaction updated successfully.", "Information", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnUpdateStatusActionPerformed

    private void cmbPatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbPatientActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbPatientActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane Scroll;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnUpdateStatus;
    private javax.swing.JComboBox<String> cmbPatient;
    private javax.swing.JComboBox cmbVaccine;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTable tblVaccineEvents;
    private javax.swing.JTextField txtVaccineStock;
    // End of variables declaration//GEN-END:variables
}
