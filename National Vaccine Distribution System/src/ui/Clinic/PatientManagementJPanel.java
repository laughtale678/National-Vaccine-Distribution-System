package ui.Clinic;

import business.Business;
import business.Organization.ClinicOrganization;
import business.Patient.Patient;
import business.UserAccount.UserAccount;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 */
public class PatientManagementJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private UserAccount account;
    private ClinicOrganization clinicOrganization;
    private Business business;

    public PatientManagementJPanel(JPanel userProcessContainer, UserAccount account, ClinicOrganization clinicOrganization, Business business) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.account = account;
        this.clinicOrganization = clinicOrganization;
        this.business = business;
        populateMyClinicPatientTable();
    }

    void populatePatientTable(String patientName, String patientID) {
        DefaultTableModel dtm_ = (DefaultTableModel) tblGlobalPatients.getModel();
        dtm_.setRowCount(0);
        for (Patient p : business.getPatientDirectory().getPatientList()) {
            Object[] row = new Object[2];
            row[0] = p;
            row[1] = p.getID();

            boolean nameMatch = patientName.isEmpty() || p.getName().equals(patientName);
            boolean idMatch = patientID.isEmpty() || p.getID().equals(patientID);

            if (nameMatch && idMatch) {
                dtm_.addRow(row);
            }
        }
    }

    void populateMyClinicPatientTable() {
        DefaultTableModel dtm_ = (DefaultTableModel) tblMyClinicPatients.getModel();
        dtm_.setRowCount(0);
        for (Patient p : clinicOrganization.getClinicPatientDirectory().getPatientList()) {
            Object[] row = new Object[2];
            row[0] = p;
            row[1] = p.getID();
            dtm_.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSeparator1 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        Scroll1 = new javax.swing.JScrollPane();
        tblGlobalPatients = new javax.swing.JTable();
        btnSearchOverNetwork = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtPatientName = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblMyClinicPatients = new javax.swing.JTable();
        btnAddPatientToMyClinic = new javax.swing.JButton();
        btnCreateNewPatient = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtAge = new javax.swing.JTextField();
        txtID = new javax.swing.JTextField();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(1024, 768));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Patient Management");

        btnBack.setFont(new java.awt.Font("Helvetica Neue", 3, 14)); // NOI18N
        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        tblGlobalPatients.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Patient Name", "Patient ID"
            }
        ));
        Scroll1.setViewportView(tblGlobalPatients);
        if (tblGlobalPatients.getColumnModel().getColumnCount() > 0) {
            tblGlobalPatients.getColumnModel().getColumn(0).setPreferredWidth(10);
            tblGlobalPatients.getColumnModel().getColumn(1).setPreferredWidth(9);
        }

        btnSearchOverNetwork.setText("Search Over the NetWork");
        btnSearchOverNetwork.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchOverNetworkActionPerformed(evt);
            }
        });

        jLabel2.setText("Patient Name:");

        jLabel4.setText("My Clinic Patients");

        jLabel5.setText("Global Patient Search Results");

        tblMyClinicPatients.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Patient Name", "Patient ID"
            }
        ));
        jScrollPane1.setViewportView(tblMyClinicPatients);

        btnAddPatientToMyClinic.setText("Add-->");
        btnAddPatientToMyClinic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddPatientToMyClinicActionPerformed(evt);
            }
        });

        btnCreateNewPatient.setText("Create New Patient");
        btnCreateNewPatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateNewPatientActionPerformed(evt);
            }
        });

        jLabel7.setText("Patient Age:");

        jLabel8.setText("Patient ID:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 913, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Scroll1, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel2)
                                        .addComponent(jLabel7)
                                        .addComponent(jLabel8))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(txtID)
                                        .addComponent(txtAge, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtPatientName, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addComponent(btnCreateNewPatient, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnSearchOverNetwork, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnAddPatientToMyClinic))
                    .addComponent(jLabel5))
                .addGap(65, 65, 65)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 439, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(51, 51, 51))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(54, 54, 54)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Scroll1, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(36, 36, 36)
                                .addComponent(btnAddPatientToMyClinic)))
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jLabel2)
                            .addComponent(txtPatientName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jLabel7)
                            .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jLabel8)
                            .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(35, 35, 35)
                        .addComponent(btnSearchOverNetwork)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnCreateNewPatient))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 416, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(165, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnSearchOverNetworkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchOverNetworkActionPerformed
        // TODO add your handling code here:
        String patientName = txtPatientName.getText();
        String patientID = txtID.getText();
        populatePatientTable(patientName, patientID);

    }//GEN-LAST:event_btnSearchOverNetworkActionPerformed

    private void btnCreateNewPatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateNewPatientActionPerformed
        // TODO add your handling code here:
        String patientName = txtPatientName.getText();
        String patientAge = txtAge.getText();
        String patientID = txtID.getText();
        //Check if all the txtboxes have input
        if (patientName.isEmpty() || patientAge.isEmpty() || patientID.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please fill in all patient information.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        //Check global patient directory
        for (Patient p : business.getPatientDirectory().getPatientList()) {
            if (p.getID().equals(patientID)) {
                JOptionPane.showMessageDialog(null, "Patient already created in this system, please get the patient info from global search", "Warning", JOptionPane.WARNING_MESSAGE);
                return;
            }
        }
        //Add Patient to the business and also the clinic.
        business.getPatientDirectory().newPatient(patientName, patientAge, patientID);
        clinicOrganization.getClinicPatientDirectory().newPatient(patientName, patientAge, patientID);
        populateMyClinicPatientTable();
    }//GEN-LAST:event_btnCreateNewPatientActionPerformed

    private void btnAddPatientToMyClinicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddPatientToMyClinicActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblGlobalPatients.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a patient first", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {
            Patient patient = (Patient) tblGlobalPatients.getValueAt(selectedRow, 0);
            clinicOrganization.getClinicPatientDirectory().newPatient(patient.getName(), patient.getAge(), patient.getID());
            populateMyClinicPatientTable();
        }
    }//GEN-LAST:event_btnAddPatientToMyClinicActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane Scroll1;
    private javax.swing.JButton btnAddPatientToMyClinic;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCreateNewPatient;
    private javax.swing.JButton btnSearchOverNetwork;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable tblGlobalPatients;
    private javax.swing.JTable tblMyClinicPatients;
    private javax.swing.JTextField txtAge;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtPatientName;
    // End of variables declaration//GEN-END:variables
}
