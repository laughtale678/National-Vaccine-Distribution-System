package ui.PHD;

import business.Business;
import business.Organization.PHDOrganization;
import business.Organization.ProviderOrganization;
import business.UserAccount.UserAccount;
import business.WorkQueue.ProviderWorkRequest;
import business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author raunak
 */
public class PHDVaccineRequestJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private Business business;
    private UserAccount account;
    private PHDOrganization phdOrganization;

    public PHDVaccineRequestJPanel(JPanel userProcessContainer, UserAccount account, PHDOrganization phdOrganization, Business business) {
        initComponents();

        this.userProcessContainer = userProcessContainer;
        this.account = account;
        this.business = business;
        this.phdOrganization = phdOrganization;

        populateVaccineRequestTable();
        populateAssignedVaccineRequestTable();
    }

    private void populateVaccineRequestTable() {
        DefaultTableModel model = (DefaultTableModel) tblVaccineRequest.getModel();
        model.setRowCount(0);
        for (ProviderOrganization provider : phdOrganization.getProviders()) {
            for (WorkRequest work : provider.getWorkQueue().getWorkRequestList()) {
                if (work.getStatus().equals("Sent to PHD")) {
                    Object[] row = new Object[6];
                    row[0] = work.getVaccine().getVaccineId();
                    row[1] = work.getVaccine();
                    row[2] = ((ProviderWorkRequest) work).getRequestedQty();
                    row[3] = work;
                    row[4] = work.getSender();
                    row[5] = work.getReceiver();
                    model.addRow(row);
                }
            }
        }
    }

    private void populateAssignedVaccineRequestTable() {
        DefaultTableModel model = (DefaultTableModel) tblAssignedVaccineRequest.getModel();
        model.setRowCount(0);
        for (ProviderOrganization provider : phdOrganization.getProviders()) {
            for (WorkRequest work : provider.getWorkQueue().getWorkRequestList()) {
                if (work.getReceiver() == account) {
                    Object[] row = new Object[6];
                    row[0] = work.getVaccine().getVaccineId();
                    row[1] = work.getVaccine();
                    row[2] = ((ProviderWorkRequest) work).getRequestedQty();
                    row[3] = work;
                    row[4] = work.getSender();
                    row[5] = work.getReceiver();
                    model.addRow(row);
                }
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblVaccineRequest = new javax.swing.JTable();
        btnReject = new javax.swing.JButton();
        btnForward = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        btnAccept = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblAssignedVaccineRequest = new javax.swing.JTable();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(1024, 768));

        tblVaccineRequest.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Vaccine ID", "Vaccine Name", "Qty", "Status", "Sender", "Receiver"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblVaccineRequest);

        btnReject.setText("Reject");
        btnReject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRejectActionPerformed(evt);
            }
        });

        btnForward.setText("Forward to CDC");
        btnForward.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnForwardActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Request From Provider");

        btnBack.setFont(new java.awt.Font("Helvetica Neue", 1, 15)); // NOI18N
        btnBack.setText("<<Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnAccept.setText("Assign to me");
        btnAccept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAcceptActionPerformed(evt);
            }
        });

        tblAssignedVaccineRequest.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Vaccine ID", "Vaccine Name", "Qty", "Status", "Sender", "Receiver"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblAssignedVaccineRequest);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnBack)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 76, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 826, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(btnForward)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(btnReject))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(btnAccept)
                                    .addGap(660, 660, 660)))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 826, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 110, Short.MAX_VALUE)))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnForward, btnReject});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBack)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAccept)
                .addGap(31, 31, 31)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnForward)
                    .addComponent(btnReject))
                .addContainerGap(230, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnRejectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRejectActionPerformed

        int selectedRow = tblAssignedVaccineRequest.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select the row to assign the Provider Request", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {
            ProviderWorkRequest p = (ProviderWorkRequest) tblAssignedVaccineRequest.getValueAt(selectedRow, 3);
            if (!p.getStatus().equals("Processing")) {
                JOptionPane.showMessageDialog(null, "This request has already been processed, choose another one!", "Warning", JOptionPane.WARNING_MESSAGE);
                return;
            }
            p.setStatus("Rejected");
            populateAssignedVaccineRequestTable();
            JOptionPane.showMessageDialog(null, "Request rejected successfully.", "Warning", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnRejectActionPerformed

    private void btnForwardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnForwardActionPerformed
        int selectedRow = tblAssignedVaccineRequest.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select the row to Forward Provider request to CDC", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {
            ProviderWorkRequest p = (ProviderWorkRequest) tblAssignedVaccineRequest.getValueAt(selectedRow, 3);
            if (!p.getStatus().equals("Processing")) {
                JOptionPane.showMessageDialog(null, "Failed. This request has already been precessed", "Warning", JOptionPane.WARNING_MESSAGE);
                return;
            }
            p.setStatus("Forwarded to CDC");
            p.setReceiver(account);
            populateAssignedVaccineRequestTable();
            JOptionPane.showMessageDialog(null, "Request forward to CDC successfully.", "Information", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnForwardActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnAcceptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAcceptActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblVaccineRequest.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select the row to assign the Provider Request", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {
            ProviderWorkRequest p = (ProviderWorkRequest) tblVaccineRequest.getValueAt(selectedRow, 3);
            p.setStatus("Processing");
            p.setReceiver(account);
            populateVaccineRequestTable();
            populateAssignedVaccineRequestTable();

            JOptionPane.showMessageDialog(null, "Request assigned successfully.", "Information", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnAcceptActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAccept;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnForward;
    private javax.swing.JButton btnReject;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblAssignedVaccineRequest;
    private javax.swing.JTable tblVaccineRequest;
    // End of variables declaration//GEN-END:variables
}
